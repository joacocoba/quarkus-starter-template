# Multi-stage Dockerfile for Quarkus JVM mode
# Based on Red Hat UBI 9 for enterprise-grade security and support

# ============================================================================
# Build Stage
# ============================================================================
FROM registry.access.redhat.com/ubi9/openjdk-21:1.20 AS builder

# Set working directory
WORKDIR /app

# Copy Maven wrapper and configuration
COPY .mvn/ .mvn/
COPY mvnw pom.xml ./
RUN chmod +x mvnw

# Download dependencies for better layer caching
RUN ./mvnw dependency:go-offline -B

# Copy source code
COPY src/ src/

# Build the application (skip tests for Docker build)
RUN ./mvnw package -DskipTests -B

# ============================================================================
# Runtime Stage  
# ============================================================================
FROM registry.access.redhat.com/ubi9/openjdk-21-runtime:1.20

# Metadata
LABEL name="transactions-service" \
      version="1.0.0" \
      description="Production-grade Quarkus Transaction Management Service" \
      maintainer="example-team@example.com" \
      vendor="Example Corporation"

# Environment variables
ENV LANGUAGE='en_US:en'
ENV JAVA_APP_DIR=/deployments
ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV AB_ENABLED=jmx_exporter

# Create application user (non-root)
USER root
RUN microdnf install -y shadow-utils && \
    groupadd -r appuser -g 1001 && \
    useradd -r -g appuser -u 1001 -d /deployments appuser && \
    microdnf clean all

# Copy the Quarkus fast-jar from builder stage
COPY --from=builder --chown=1001:root /app/target/quarkus-app/lib/ $JAVA_APP_DIR/lib/
COPY --from=builder --chown=1001:root /app/target/quarkus-app/*.jar $JAVA_APP_DIR/
COPY --from=builder --chown=1001:root /app/target/quarkus-app/app/ $JAVA_APP_DIR/app/
COPY --from=builder --chown=1001:root /app/target/quarkus-app/quarkus/ $JAVA_APP_DIR/quarkus/

# Set up permissions
RUN chown -R 1001:root $JAVA_APP_DIR && \
    chmod -R g+rwX $JAVA_APP_DIR

# Switch to non-root user
USER 1001

# Set working directory
WORKDIR $JAVA_APP_DIR

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/q/health/ready || exit 1

# Run the application
ENTRYPOINT [ "java", "-jar", "/deployments/quarkus-run.jar" ]
